- name: Read consul token
  slurp:
    src: "{{ nomad.remote.server.root_dir + '/server.env' }}"
  register: server_env

- name: Set vars
  set_fact:
    remote_job_dir: "{{ nomad.remote.jobs.root_dir }}/{{ job_name }}"
    consul_token: "{{ server_env.content | b64decode | regex_search('CONSUL_HTTP_TOKEN=(.+)[$\n]', '\\1') | first }}"

- name: Ensure directory has proper chmod
  file:
    path: "{{ remote_job_dir }}"
    state: directory
    owner: nomad
    group: nomad
    mode: 0700

- name: Sync all templates
  template:
    src: "{{ file }}"
    dest: "{{ remote_job_dir }}/"
    owner: nomad
    group: nomad
    mode: 0600
  loop_control:
    loop_var: file
  with_fileglob:
    - "{{ job_dir }}/*"

- name: Check if template contain docker-compose.yml
  register: docker_compose_file
  stat:
    path: "{{ remote_job_dir }}/docker-compose.yml"

- name: Sync docker
  when: docker_compose_file.stat.exists
  include_tasks: ./deploy-docker-files.yml

- name: Apply {{ job_name }} to cluster
  become_user: nomad
  shell: |
    nomad job run \
      -address=https://localhost:4646 \
      -ca-path={{ nomad.remote.tls_dir }}/nomad-ca.pem \
      -client-cert={{ nomad.remote.tls_dir }}/server.pem \
      -client-key={{ nomad.remote.tls_dir }}/server-key.pem \
      -token=$(jq -r '.SecretID' {{ nomad.remote.server.root_dir }}/bootstrap.json) \
      {{ nomad.remote.jobs.root_dir + '/' + job_name + '/job.hcl' }}
